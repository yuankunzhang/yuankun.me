<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yuankun&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yuankun.me/"/>
  <updated>2017-08-06T10:19:30.000Z</updated>
  <id>https://yuankun.me/</id>
  
  <author>
    <name>Yuankun Zhang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 Let&#39;s Encrypt 为网站启用 HTTPS 支持</title>
    <link href="https://yuankun.me/2017/08/06/enable-https-with-lets-encrypt/"/>
    <id>https://yuankun.me/2017/08/06/enable-https-with-lets-encrypt/</id>
    <published>2017-08-06T08:58:13.000Z</published>
    <updated>2017-08-06T10:19:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>HTTP 协议传输的数据都是不加密的。想象一下，你访问某个网站，当数据经过路由器、宽带网关，以及某墙的时候都是完全可见的，是不是有种裸奔的感觉？为网站启用 HTTPS 支持可以说是大势所趋，在某国日益倒车的互联网环境下更是如此。</p>
<p>第零步是选择一个靠谱的 CA（Certificate Authority，数字证书认证中心）。你以为所有的认证中心都是中立可信的吗？并不是的，比如此前频频爆出丑闻的 WoSign 和 StarCom，这两家认证中心<a href="https://security.googleblog.com/2016/10/distrusting-wosign-and-startcom.html" target="_blank" rel="external">已经被 Google Chrome 等多款浏览器默认设置为不信任</a>。当然你更不能自己做裁判，像 12306.cn 一样给自己颁发证书。这里推荐 <a href="https://letsencrypt.org/" target="_blank" rel="external">Let’s Encrypt</a>，这家成立于 2016 年、由互联网安全研究小组（ISRG）主导的机构致力于向用户提供<strong>免费的、自动化管理</strong>的证书方案。</p>
<p>Let’s Encrypt 允许使用实现了 <a href="https://ietf-wg-acme.github.io/acme/" target="_blank" rel="external">ACME 协议</a>的客户端完成诸如证书获取、认证、签名、安装以及续签等步骤。官方推荐使用 <a href="https://certbot.eff.org/" target="_blank" rel="external">Certbot</a>。下面，我们以 Ubuntu 16.04 &amp; Nginx 为例，说明如何使用 Certbot 快速地为网站启用 HTTPS 支持。</p>
<a id="more"></a>
<h2 id="第一步：安装-Certbot"><a href="#第一步：安装-Certbot" class="headerlink" title="第一步：安装 Certbot"></a>第一步：安装 Certbot</h2><p>在系统中添加 Certbot 的 PPA，然后使用 <code>apt</code> 安装 Certbot。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> sudo apt-get update</div><div class="line"><span class="meta">$</span> sudo apt-get install software-properties-common</div><div class="line"><span class="meta">$</span> sudo add-apt-repository ppa:certbot/certbot</div><div class="line"><span class="meta">$</span> sudo apt-get update</div><div class="line"><span class="meta">$</span> sudo apt-get install python-certbot-nginx</div></pre></td></tr></table></figure>
<h2 id="第二步：安装证书"><a href="#第二步：安装证书" class="headerlink" title="第二步：安装证书"></a>第二步：安装证书</h2><p>运行下面的命令获取证书，这个命令同时会为你更改 Nginx 配置文件（并且重载 Nginx）：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> sudo certbot --nginx</div></pre></td></tr></table></figure>
<p>如果你想自己修改 Nginx 配置文件，可以使用 <code>certonly</code> 选项：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> sudo certbot --nginx certonly</div></pre></td></tr></table></figure>
<h2 id="第三步：自动续签"><a href="#第三步：自动续签" class="headerlink" title="第三步：自动续签"></a>第三步：自动续签</h2><p>Let’s Encrypt 签发的证书，有效期是 90 天。你可以使用下面的命令对证书进行续签：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> sudo certbot renew --dry-run</div></pre></td></tr></table></figure>
<p>当然，创建一个 Cron Job 周期性地自动续签是一个更省事的方案。</p>
<hr>
<p>现在，在浏览器中打开你的网站，你就能从地址栏看到令人安心的绿色小锁了。除了本文介绍的方法，<a href="https://github.com/Neilpang/acme.sh" target="_blank" rel="external">acme.sh</a> 这个项目也提供了一种非常易用的方案。想要了解更多，请参考<a href="https://syntaxoff.com/post/201708/domain_ssl/" target="_blank" rel="external">这篇文章</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTTP 协议传输的数据都是不加密的。想象一下，你访问某个网站，当数据经过路由器、宽带网关，以及某墙的时候都是完全可见的，是不是有种裸奔的感觉？为网站启用 HTTPS 支持可以说是大势所趋，在某国日益倒车的互联网环境下更是如此。&lt;/p&gt;
&lt;p&gt;第零步是选择一个靠谱的 CA（Certificate Authority，数字证书认证中心）。你以为所有的认证中心都是中立可信的吗？并不是的，比如此前频频爆出丑闻的 WoSign 和 StarCom，这两家认证中心&lt;a href=&quot;https://security.googleblog.com/2016/10/distrusting-wosign-and-startcom.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;已经被 Google Chrome 等多款浏览器默认设置为不信任&lt;/a&gt;。当然你更不能自己做裁判，像 12306.cn 一样给自己颁发证书。这里推荐 &lt;a href=&quot;https://letsencrypt.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Let’s Encrypt&lt;/a&gt;，这家成立于 2016 年、由互联网安全研究小组（ISRG）主导的机构致力于向用户提供&lt;strong&gt;免费的、自动化管理&lt;/strong&gt;的证书方案。&lt;/p&gt;
&lt;p&gt;Let’s Encrypt 允许使用实现了 &lt;a href=&quot;https://ietf-wg-acme.github.io/acme/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ACME 协议&lt;/a&gt;的客户端完成诸如证书获取、认证、签名、安装以及续签等步骤。官方推荐使用 &lt;a href=&quot;https://certbot.eff.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Certbot&lt;/a&gt;。下面，我们以 Ubuntu 16.04 &amp;amp; Nginx 为例，说明如何使用 Certbot 快速地为网站启用 HTTPS 支持。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ssl" scheme="https://yuankun.me/tags/ssl/"/>
    
      <category term="security" scheme="https://yuankun.me/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yuankun.me/2017/08/06/hello-world/"/>
    <id>https://yuankun.me/2017/08/06/hello-world/</id>
    <published>2017-08-06T03:49:25.000Z</published>
    <updated>2017-08-06T03:49:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
